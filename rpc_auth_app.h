/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RPC_AUTH_APP_H_RPCGEN
#define _RPC_AUTH_APP_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct request_authorization {
	char *userID;
};
typedef struct request_authorization request_authorization;

struct reply_authorization {
	char *error_message;
	char *token_authorize_access;
};
typedef struct reply_authorization reply_authorization;

struct request_access_token {
	char *userID;
	char *token_authorize_access_signed;
	int use_refresh_token;
};
typedef struct request_access_token request_access_token;

struct reply_access_token {
	char *error_message;
	char *token_resource_access;
	char *token_refresh;
	int validity;
};
typedef struct reply_access_token reply_access_token;

struct request_validate_delegated_action {
	char *token_resource_access;
	char *accessed_resource;
	char *operation_type;
};
typedef struct request_validate_delegated_action request_validate_delegated_action;

struct reply_validate_delegated_action {
	char *error_message;
	char *success_message;
};
typedef struct reply_validate_delegated_action reply_validate_delegated_action;

struct request_token_approval {
	char *token_authorize_access;
};
typedef struct request_token_approval request_token_approval;

struct reply_token_approval {
	char *token_authorize_access_signed;
};
typedef struct reply_token_approval reply_token_approval;

struct request_renew_access_token {
	char *userID;
	char *token_resource_access_expired;
};
typedef struct request_renew_access_token request_renew_access_token;

#define AUTH_APP 0x33445566
#define AUTH_APP_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define func_authorization 1
extern  reply_authorization * func_authorization_1(request_authorization , CLIENT *);
extern  reply_authorization * func_authorization_1_svc(request_authorization , struct svc_req *);
#define func_access_token 2
extern  reply_access_token * func_access_token_1(request_access_token , CLIENT *);
extern  reply_access_token * func_access_token_1_svc(request_access_token , struct svc_req *);
#define func_validate_delegated_action 3
extern  reply_validate_delegated_action * func_validate_delegated_action_1(request_validate_delegated_action , CLIENT *);
extern  reply_validate_delegated_action * func_validate_delegated_action_1_svc(request_validate_delegated_action , struct svc_req *);
#define func_token_approval 4
extern  reply_token_approval * func_token_approval_1(request_token_approval , CLIENT *);
extern  reply_token_approval * func_token_approval_1_svc(request_token_approval , struct svc_req *);
#define func_renew_access_token 5
extern  reply_access_token * func_renew_access_token_1(request_renew_access_token , CLIENT *);
extern  reply_access_token * func_renew_access_token_1_svc(request_renew_access_token , struct svc_req *);
extern int auth_app_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define func_authorization 1
extern  reply_authorization * func_authorization_1();
extern  reply_authorization * func_authorization_1_svc();
#define func_access_token 2
extern  reply_access_token * func_access_token_1();
extern  reply_access_token * func_access_token_1_svc();
#define func_validate_delegated_action 3
extern  reply_validate_delegated_action * func_validate_delegated_action_1();
extern  reply_validate_delegated_action * func_validate_delegated_action_1_svc();
#define func_token_approval 4
extern  reply_token_approval * func_token_approval_1();
extern  reply_token_approval * func_token_approval_1_svc();
#define func_renew_access_token 5
extern  reply_access_token * func_renew_access_token_1();
extern  reply_access_token * func_renew_access_token_1_svc();
extern int auth_app_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_request_authorization (XDR *, request_authorization*);
extern  bool_t xdr_reply_authorization (XDR *, reply_authorization*);
extern  bool_t xdr_request_access_token (XDR *, request_access_token*);
extern  bool_t xdr_reply_access_token (XDR *, reply_access_token*);
extern  bool_t xdr_request_validate_delegated_action (XDR *, request_validate_delegated_action*);
extern  bool_t xdr_reply_validate_delegated_action (XDR *, reply_validate_delegated_action*);
extern  bool_t xdr_request_token_approval (XDR *, request_token_approval*);
extern  bool_t xdr_reply_token_approval (XDR *, reply_token_approval*);
extern  bool_t xdr_request_renew_access_token (XDR *, request_renew_access_token*);

#else /* K&R C */
extern bool_t xdr_request_authorization ();
extern bool_t xdr_reply_authorization ();
extern bool_t xdr_request_access_token ();
extern bool_t xdr_reply_access_token ();
extern bool_t xdr_request_validate_delegated_action ();
extern bool_t xdr_reply_validate_delegated_action ();
extern bool_t xdr_request_token_approval ();
extern bool_t xdr_reply_token_approval ();
extern bool_t xdr_request_renew_access_token ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_RPC_AUTH_APP_H_RPCGEN */
